<#@ template debug="true" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#@ include file=".\Header.tt"#>
<#
Dictionary<string, Header> codes = new Dictionary<string, Header>() {
{"AcadVer",new Header(1,"ACADVER","DxfVersion.AutoCad2018","IDxfVersion")},
{"HandleSeed",new Header(5,"HANDSEED","\"1\"")},
{"Angbase",new Header(50,"ANGBASE","0.0")},
{"Angdir",new Header( 70,"ANGDIR","AngleDirection.CCW")},
{"AttMode" , new Header(70,"ATTMODE","AttributeVisibility.Normal")},
{"AUnits" , new Header(70,"AUNITS","0")},
{"AUprec",new Header(70,"AUPREC","0","short")},
{"CeColor",new Header( 62,"CECOLOR","256")},
{"CeLtScale",new Header(40,"CELTSCALE","1.0")},
{"CeLtype" ,new Header(6, "CELTYPE","\"ByLayer\"")},
{"CeLweight",new Header( 370,"CELWEIGHT","-1")},
{"CLayer", new Header(8,"CLAYER","\"DIM\"")},
{"CMLJust", new Header(70,"CMLJUST","0")},
{"CMLScale", new Header(40,"CMLSCALE","1.0")},
{"CMLStyle",new Header(2, "CMLSTYLE","\"Standard\"")},
{"DimStyle",new Header(2,"DIMSTYLE","\"STANDARD\"")},
{"TextSize",new Header(40, "TEXTSIZE","3")},
{"LUnits",new Header(70,"LUNITS","2")},
{"LUprec",new Header(70,"LUPREC","2")},
{"DwgCodePage",new Header (3,"DWGCODEPAGE","\"ANSI_\" + Encoding.ASCII.WindowsCodePage","string")},
{"Extnames",new Header(290,"EXTNAMES","1")},
{"InsBase",new Header(-1,"INSBASE","Vector3.Zero")},
{"InsUnits",new Header(70,"INSUNITS","4")},
{"LwDisplay",new Header(290, "LWDISPLAY","0")},
{"LtScale",new Header( 40,"LTSCALE","1.0")},
{"MirrText",new Header(70,"MIRRTEXT","0")},
{"PdMode",new Header(70,"PDMODE","0")},
{"PdSize",new Header(40,"PDSIZE","0.0")},
{"PLineGen",new Header(70,"PLINEGEN","0","short")},
{"PsLtScale",new Header(70,"PSLTSCALE","1","short")},
{"TdCreate",new Header(40,"TDCREATE","DateTime.Now")},
{"TduCreate",new Header(40,"TDUCREATE","DateTime.UtcNow")},
{"TdUpdate",new Header(40,"TDUPDATE","DateTime.Now")},
{"TduUpdate",new Header(40,"TDUUPDATE","DateTime.UtcNow")},
{"TdinDwg",new Header(40,"TDINDWG","new TimeSpan()")},
{"UcsOrg",new Header(-1,"UCSORG","Vector3.Zero")},
{"UcsXDir",new Header(-1,"UCSXDIR","Vector3.UnitX")},
{"UcsYDir",new Header(-1,"UCSYDIR","Vector3.UnitY")}

};#>
using System;
using WeETL.Numerics;
using System.Text;
using WeETL.Observables.Dxf.Header;
using WeETL.Observables.Dxf.Units;
namespace WeETL.Observables.Dxf
{
	public static class DxfHeaderCode{
<#foreach (var key in codes.Keys){#>
		public const string <#=key#>="$<#=codes[key].Name#>";
<#}#>
	}
	public interface IDxfHeader{
		void SetValue(string key, DxfHeaderValue value);
<#foreach(var key in codes.Keys){#>
		<#=codes[key].GetRealType()#> <#=key#>{get;set;}
<#}#>	
	}
	public partial class DxfHeader:IDxfHeader
    {
		private void Initialize(){
<#foreach (var key in codes.Keys){#>
			Codes[DxfHeaderCode.<#=key#>]=new DxfHeaderValue(DxfHeaderCode.<#=key#>,<#=codes[key].Group#>,<#=codes[key].Value#>);
<#}#>
		}

<#foreach(var key in codes.Keys){#>
		public <#=codes[key].GetRealType()#> <#=key#>{
			get=><#=codes[key].GetGetProperty(key)#>;
			set{Codes[DxfHeaderCode.<#=key#>].Value=value;}
		}
<#}#>
	}
}


