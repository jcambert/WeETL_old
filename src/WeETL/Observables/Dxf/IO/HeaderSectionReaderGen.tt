<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#@ include file=".\..\Templates\Sections\Header.tt"#>
using System;
using Microsoft.Extensions.Logging;
using WeETL.Observables.Dxf.Units;
using WeETL.Numerics;
namespace WeETL.Observables.Dxf.IO
{
<#foreach(var code in codes.Where(c=>c.Value.IsHandled)){#>
	[DxfHeaderType(DxfHeaderCode.<#=code.Key#>)]
	internal partial class HeaderSection<#=code.Key#>Reader:<#=code.Value.GetReaderClass(code.Key)#>{
		public HeaderSection<#=code.Key#>Reader(IServiceProvider sp, ILogger<HeaderSection<#=code.Key#>Reader> logger):base(sp,logger){}
<# 
var reader=code.Value.GetReader(code.Key);
if(reader!=null){#>
		public override void Read<DxfEntityTypeAttribute>((int, string) code)
        {
            <#=reader#>
        }
<#}else if(code.Value.UseTypeReader){#>
		protected override void SetValue(<#=code.Value.GetRealType()#> value)
        {
            Document.Header.<#=code.Key#> = value;
        }
<#}#>
	}
<#}#>
}
